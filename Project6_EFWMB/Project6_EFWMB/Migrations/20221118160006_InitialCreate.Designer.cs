// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Project6_EFWMB.Database;

#nullable disable

namespace Project6EFWMB.Migrations
{
    [DbContext(typeof(WarungContext))]
    [Migration("20221118160006_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Project6_EFWMB.Database.BillDetails", b =>
                {
                    b.Property<int>("BillDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BillDetailsId"));

                    b.Property<int>("BillsId")
                        .HasColumnType("integer");

                    b.Property<int>("MenuPricesId")
                        .HasColumnType("integer");

                    b.Property<float>("Qty")
                        .HasColumnType("Float4");

                    b.Property<int>("TotalPrice")
                        .HasColumnType("integer");

                    b.HasKey("BillDetailsId");

                    b.HasIndex("BillsId");

                    b.HasIndex("MenuPricesId");

                    b.ToTable("t_bill_detail");
                });

            modelBuilder.Entity("Project6_EFWMB.Database.Bills", b =>
                {
                    b.Property<int>("BillsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BillsId"));

                    b.Property<int>("CustomersId")
                        .HasColumnType("integer");

                    b.Property<int?>("TablesId")
                        .HasColumnType("integer");

                    b.Property<string>("TransTypesId")
                        .IsRequired()
                        .HasColumnType("VarChar(3)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("BillsId");

                    b.HasIndex("CustomersId");

                    b.HasIndex("TablesId");

                    b.HasIndex("TransTypesId");

                    b.ToTable("t_bill");
                });

            modelBuilder.Entity("Project6_EFWMB.Database.CustomerDiscounts", b =>
                {
                    b.Property<int>("CustDiscountsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CustDiscountsId"));

                    b.Property<int?>("CustomersId")
                        .HasColumnType("integer");

                    b.Property<int?>("DiscountsId")
                        .HasColumnType("integer");

                    b.HasKey("CustDiscountsId");

                    b.HasIndex("CustomersId");

                    b.HasIndex("DiscountsId");

                    b.ToTable("m_customer_discount");
                });

            modelBuilder.Entity("Project6_EFWMB.Database.Customers", b =>
                {
                    b.Property<int>("CustomersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CustomersId"));

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("VarChar(50)");

                    b.Property<bool>("IsMember")
                        .HasColumnType("boolean");

                    b.Property<string>("MobilePhone")
                        .IsRequired()
                        .HasColumnType("VarChar(20)");

                    b.HasKey("CustomersId");

                    b.ToTable("m_customer");
                });

            modelBuilder.Entity("Project6_EFWMB.Database.Discounts", b =>
                {
                    b.Property<int>("DiscountsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DiscountsId"));

                    b.Property<string>("DiscDesciption")
                        .HasColumnType("VarChar(50)");

                    b.Property<int?>("Percent")
                        .HasColumnType("integer");

                    b.HasKey("DiscountsId");

                    b.ToTable("m_discount");
                });

            modelBuilder.Entity("Project6_EFWMB.Database.MenuPrices", b =>
                {
                    b.Property<int>("MenuPricesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MenuPricesId"));

                    b.Property<int>("MenusId")
                        .HasColumnType("integer");

                    b.Property<float>("Price")
                        .HasColumnType("Float4");

                    b.HasKey("MenuPricesId");

                    b.HasIndex("MenusId");

                    b.ToTable("m_menu_price");
                });

            modelBuilder.Entity("Project6_EFWMB.Database.Menus", b =>
                {
                    b.Property<int>("MenusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MenusId"));

                    b.Property<string>("MenuCode")
                        .IsRequired()
                        .HasColumnType("VarChar(10)");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasColumnType("VarChar(100)");

                    b.HasKey("MenusId");

                    b.ToTable("m_menu");
                });

            modelBuilder.Entity("Project6_EFWMB.Database.Tables", b =>
                {
                    b.Property<int>("TablesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TablesId"));

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("VarChar(3)");

                    b.HasKey("TablesId");

                    b.ToTable("m_table");
                });

            modelBuilder.Entity("Project6_EFWMB.Database.TransTypes", b =>
                {
                    b.Property<string>("TransTypesId")
                        .HasColumnType("VarChar(3)");

                    b.Property<string>("Description")
                        .HasColumnType("VarChar(50)");

                    b.HasKey("TransTypesId");

                    b.ToTable("m_trans_type");
                });

            modelBuilder.Entity("Project6_EFWMB.Database.BillDetails", b =>
                {
                    b.HasOne("Project6_EFWMB.Database.Bills", "Bills")
                        .WithMany("BillDetails")
                        .HasForeignKey("BillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project6_EFWMB.Database.MenuPrices", "MenuPrices")
                        .WithMany("BillDetails")
                        .HasForeignKey("MenuPricesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bills");

                    b.Navigation("MenuPrices");
                });

            modelBuilder.Entity("Project6_EFWMB.Database.Bills", b =>
                {
                    b.HasOne("Project6_EFWMB.Database.Customers", "Customers")
                        .WithMany("Bills")
                        .HasForeignKey("CustomersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project6_EFWMB.Database.Tables", "Tables")
                        .WithMany("Bills")
                        .HasForeignKey("TablesId");

                    b.HasOne("Project6_EFWMB.Database.TransTypes", "TransTypes")
                        .WithMany("Bills")
                        .HasForeignKey("TransTypesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customers");

                    b.Navigation("Tables");

                    b.Navigation("TransTypes");
                });

            modelBuilder.Entity("Project6_EFWMB.Database.CustomerDiscounts", b =>
                {
                    b.HasOne("Project6_EFWMB.Database.Customers", "Customers")
                        .WithMany("CustomerDiscounts")
                        .HasForeignKey("CustomersId");

                    b.HasOne("Project6_EFWMB.Database.Discounts", "Discounts")
                        .WithMany("CustomerDiscounts")
                        .HasForeignKey("DiscountsId");

                    b.Navigation("Customers");

                    b.Navigation("Discounts");
                });

            modelBuilder.Entity("Project6_EFWMB.Database.MenuPrices", b =>
                {
                    b.HasOne("Project6_EFWMB.Database.Menus", "Menus")
                        .WithMany("MenuPrices")
                        .HasForeignKey("MenusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menus");
                });

            modelBuilder.Entity("Project6_EFWMB.Database.Bills", b =>
                {
                    b.Navigation("BillDetails");
                });

            modelBuilder.Entity("Project6_EFWMB.Database.Customers", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("CustomerDiscounts");
                });

            modelBuilder.Entity("Project6_EFWMB.Database.Discounts", b =>
                {
                    b.Navigation("CustomerDiscounts");
                });

            modelBuilder.Entity("Project6_EFWMB.Database.MenuPrices", b =>
                {
                    b.Navigation("BillDetails");
                });

            modelBuilder.Entity("Project6_EFWMB.Database.Menus", b =>
                {
                    b.Navigation("MenuPrices");
                });

            modelBuilder.Entity("Project6_EFWMB.Database.Tables", b =>
                {
                    b.Navigation("Bills");
                });

            modelBuilder.Entity("Project6_EFWMB.Database.TransTypes", b =>
                {
                    b.Navigation("Bills");
                });
#pragma warning restore 612, 618
        }
    }
}
